name: Publish releases

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'The version number to tag and release'
        required: true
        type: string

env:
  PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1

jobs:
  release-npm:
    runs-on: ubuntu-latest
    environment: main
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2.2.4
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
          cache: 'pnpm'
      - name: pnpm install
        uses: nick-fields/retry@v2.8.3
        with:
          max_attempts: 10
          timeout_minutes: 15
          retry_on: error
          command: pnpm install
      - name: Change version number and sync
        run: |
          node scripts/update-version.mjs ${{ inputs.version }}
          sh scripts/sync-version.sh
      - name: update lockfile
        uses: nick-fields/retry@v2.8.3
        with:
          max_attempts: 10
          timeout_minutes: 15
          retry_on: error
          command: pnpm install
      - name: GIT commit and push all changed files
        run: |
          git config --global user.name "mcollina"
          git config --global user.email "hello@matteocollina.com"
          git commit -a -m "Bumped ${{ inputs.version }}"
          git push origin HEAD:main
      - run: pnpm -r publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
            - name: create release
      - name: 'Create release notes'
        run: |
          npm i @matteo.collina/release-notes -g
          release-notes -a ${{ secrets.GITHUB_TOKEN }} -t ${{ inputs.version }} -r platformatic -o platformatic

  release-docker:
    needs: release-npm
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: |
            platformatic/platformatic:latest
            platformatic/platformatic:${{ github.ref_name }}
          platforms: linux/amd64,linux/arm64

  publish-to-schema-store:
    runs-on: ubuntu-latest
    needs: release-npm
    steps:
      - uses: actions/checkout@v3
      - uses: pnpm/action-setup@v2.2.4
      - uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'pnpm'
      - name: pnpm install
        run: pnpm install
      - name: Creates output folder and generate the schemas
        id: gen-schemas
        run:  |
              mkdir output
              node packages/service/lib/schema.js > output/service
              node packages/db/lib/schema.js > output/db
              node -e "console.log('VERSION=v'+ require('./package.json').version)" >> $GITHUB_OUTPUT
      - name: Pushes to schema store repository
        id: push_directory
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.SCHEMAS_API_TOKEN_GITHUB }}
        with:
          source-directory: output/
          destination-github-username: 'platformatic'
          destination-repository-name: 'schemas'
          user-email: hello@matteocollina.com
          commit-message: added ${{ steps.gen-schemas.outputs.VERSION }}
          target-branch: main
          target-directory: ${{ steps.gen-schemas.outputs.VERSION }}
